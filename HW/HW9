In Java:
********************
public class HW9 {
    public static class TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode(int x) {
        val = x;
      }
    }

    public static class Solution {
      public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) {
          return null;
        }

        if (p.val < root.val && q.val < root.val) {
          return lowestCommonAncestor(root.left, p, q);
        } else if (p.val > root.val && q.val > root.val) {
          return lowestCommonAncestor(root.right, p, q);
        } else {
          return root;
        }
      }
    }

    public static void main(String[] args) {
      TreeNode root = new TreeNode(4);
      root.left = new TreeNode(2);
      root.right = new TreeNode(5);
      root.left.left = new TreeNode(1);
      root.left.right = new TreeNode(3);

      TreeNode p1 = root.left.right; // Node with value 3
      TreeNode q1 = root.left.left;  // Node with value 1
      TreeNode p2 = root.left.left;  // Node with value 1
      TreeNode q2 = root.right;      // Node with value 5

      Solution solution = new Solution();
      TreeNode lca1 = solution.lowestCommonAncestor(root, p1, q1);
      System.out.println("LCA of p1 and q1: " + lca1.val);

      TreeNode lca2 = solution.lowestCommonAncestor(root, p2, q2);
      System.out.println("LCA of p2 and q2: " + lca2.val);
    }
  }
********************
--------------------------------------------------
--------------------------------------------------
In Python:
**********************
